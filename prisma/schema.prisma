generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["sisri"]
}

model barrio {
  id_barrio     Int                      @id
  nombre        String?                  @db.VarChar(50)
  codigo_barrio Int?
  id_municipio  Int?
  municipio     municipio?               @relation(fields: [id_municipio], references: [id_municipio])
  cuencas       cuenca[]
  habitantes    habitantes[]
  propiedades   propiedades_existentes[]
  sectores      sector[]

  @@schema("sisri")
}

model cuenca {
  id            Int            @id
  nombre        String?        @db.VarChar(50)
  codigo_cuenca String?        @db.VarChar(50)
  geometria     String?        @db.VarChar(128)
  id_barrio     Int?
  id_municipio  Int?
  id_sector     Int?
  usngId        Int?
  barrio        barrio?        @relation(fields: [id_barrio], references: [id_barrio])
  municipio     municipio?     @relation(fields: [id_municipio], references: [id_municipio])
  sector        sector?        @relation(fields: [id_sector], references: [id_sector])
  usngsquare    usngsquare?    @relation(fields: [usngId], references: [id])
  eventos       eventos[]
  notificacion  notificacion[]

  @@schema("sisri")
}

model eventos {
  id                    Int                     @id @default(autoincrement())
  titulo                String?                 @db.VarChar(100)
  descripcion           String?
  updatedAt             DateTime                @updatedAt
  cuencaId              Int?
  estado                String?                 @default("pending") @db.VarChar(50)
  tipo                  String?                 @db.VarChar(50)
  usngId                Int?
  fecha                 DateTime                @default(now())
  createdAt             DateTime                @default(now())
  cuenca                cuenca?                 @relation(fields: [cuencaId], references: [id])
  usngsquare            usngsquare?             @relation(fields: [usngId], references: [id])
  notificaciones        notificacion[]
  propiedades_afectadas propiedades_afectadas[]

  @@schema("sisri")
}

model incidentes {
  id          Int     @id @default(autoincrement())
  eventoid    Int?
  tipo        String? @db.VarChar(50)
  descripcion String? @db.VarChar(50)
  cuencaid    Int?
  createdat   String? @db.VarChar(50)
  updatedat   String? @db.VarChar(50)

  @@schema("sisri")
}

model municipio {
  id_municipio     Int                      @id
  nombre           String?                  @db.VarChar(50)
  latitud          Float?                   @db.Real
  longitud         Float?                   @db.Real
  codigo_municipio Int?
  barrios          barrio[]
  cuencas          cuenca[]
  habitantes       habitantes[]
  propiedades      propiedades_existentes[]

  @@schema("sisri")
}

model notificacion {
  eventoId               Int
  tipo                   String                  @db.VarChar(255)
  mensaje                String
  fecha_creacion         DateTime                @default(now())
  estado                 String?                 @default("pendiente") @db.VarChar(50)
  id                     Int                     @id @default(autoincrement())
  numero_notificacion    String?                 @unique @db.VarChar(50)
  cuenca_id              Int?
  usng_id                Int?
  propiedad_id           Int?
  fecha                  DateTime?               @default(now()) @db.Timestamp(6)
  created_at             DateTime?               @default(now()) @db.Timestamp(6)
  updated_at             DateTime?               @default(now()) @db.Timestamp(6)
  cuenca                 cuenca?                 @relation(fields: [cuenca_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_notificacion_cuenca")
  propiedades_existentes propiedades_existentes? @relation(fields: [propiedad_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_notificacion_propiedad")
  usngsquare             usngsquare?             @relation(fields: [usng_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_notificacion_usng")
  evento                 eventos                 @relation(fields: [eventoId], references: [id])

  @@schema("sisri")
}

model propiedades_existentes {
  id                Int                     @id @default(autoincrement())
  tipo              String?                 @db.VarChar(50)
  gridId            Int?
  geometria         String?                 @db.VarChar(128)
  id_barrio         Int?
  id_municipio      Int?
  id_sector         Int?
  usngId            Int?
  direccion         String?                 @db.VarChar(255)
  habitantes        habitantes[]
  notificacion      notificacion[]
  eventos_afectados propiedades_afectadas[]
  barrio            barrio?                 @relation(fields: [id_barrio], references: [id_barrio])
  municipio         municipio?              @relation(fields: [id_municipio], references: [id_municipio])
  sector            sector?                 @relation(fields: [id_sector], references: [id_sector])
  usngsquare        usngsquare?             @relation(fields: [usngId], references: [id])

  @@schema("sisri")
}

model sector {
  id_sector     Int                      @id
  nombre        String?                  @db.VarChar(50)
  codigo_sector Int?
  id_barrio     Int?
  cuencas       cuenca[]
  habitantes    habitantes[]
  propiedades   propiedades_existentes[]
  barrio        barrio?                  @relation(fields: [id_barrio], references: [id_barrio])

  @@schema("sisri")
}

model usngsquare {
  id           Int                      @id
  usng         String?                  @db.VarChar(50)
  geometry     String?                  @db.VarChar(256)
  latitudes    String?                  @db.VarChar(128)
  longitudes   String?                  @db.VarChar(128)
  cuencas      cuenca[]
  eventos      eventos[]
  habitantes   habitantes[]
  notificacion notificacion[]
  propiedades  propiedades_existentes[]

  @@schema("sisri")
}

model families {
  id           Int          @id @default(autoincrement())
  apellidos    String?      @db.VarChar(100)
  description  String?      @db.VarChar(255)
  created_at   DateTime     @default(now()) @db.Timestamp(6)
  updated_at   DateTime     @default(now()) @db.Timestamp(6)
  habitantes   habitantes[]

  @@schema("sisri")
}

model habitantes {
  id           Int                     @id @default(autoincrement())
  nombre       String?                 @db.VarChar(100)
  categoria    String?                 @db.VarChar(50)
  rol          String?                 @db.VarChar(50)
  edad         Int?
  limitacion   String?                 @db.VarChar(100)
  condicion    String?                 @db.VarChar(100)
  disposicion  String?                 @db.VarChar(100)
  propiedad_id Int?
  id_municipio Int?
  id_barrio    Int?
  id_sector    Int?
  usngId       Int?
  family_id    Int?
  barrio       barrio?                 @relation(fields: [id_barrio], references: [id_barrio])
  municipio    municipio?              @relation(fields: [id_municipio], references: [id_municipio])
  sector       sector?                 @relation(fields: [id_sector], references: [id_sector])
  propiedad    propiedades_existentes? @relation(fields: [propiedad_id], references: [id])
  usngsquare   usngsquare?             @relation(fields: [usngId], references: [id])
  family       families?               @relation(fields: [family_id], references: [id])

  @@schema("sisri")
}

model propiedades_afectadas {
  id          Int                    @id @default(autoincrement())
  eventoId    Int
  propiedadId Int
  da√±os      String?
  fecha       DateTime               @default(now())
  evento      eventos                @relation(fields: [eventoId], references: [id])
  propiedad   propiedades_existentes @relation(fields: [propiedadId], references: [id])

  @@schema("sisri")
}
