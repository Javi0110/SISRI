generator client {
  provider = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["sisri"]
}

model Municipio {
  id_municipio     Int      @id @default(autoincrement())
  nombre           String
  latitud          Float
  longitud         Float
  codigo_municipio String   @unique
  barrios          Barrio[]
  propiedades      Propiedades_Existentes[]
  @@schema("sisri")
}

model Barrio {
  id_barrio      Int        @id @default(autoincrement())
  nombre         String
  codigo_barrio  String
  id_municipio   Int
  municipio      Municipio  @relation(fields: [id_municipio], references: [id_municipio])
  sectores       Sector[]
  propiedades    Propiedades_Existentes[]
  @@schema("sisri")
}

model Sector {
  id_sector     Int      @id @default(autoincrement())
  nombre        String
  codigo_sector String
  id_barrio     Int
  barrio        Barrio   @relation(fields: [id_barrio], references: [id_barrio])
  propiedades   Propiedades_Existentes[]
  @@schema("sisri")
}

model Propiedades_Existentes {
  id           Int      @id @default(autoincrement())
  valor        Float
  tipo         String
  id_municipio Int
  id_barrio    Int
  id_sector    Int
  municipio    Municipio @relation(fields: [id_municipio], references: [id_municipio])
  barrio       Barrio    @relation(fields: [id_barrio], references: [id_barrio])
  sector       Sector    @relation(fields: [id_sector], references: [id_sector])
  gridId       Int
  grid         USNGSquare @relation(fields: [gridId], references: [id])
  geometria    Json
  eventos      EventosPropiedades[]
  incidentes   Incidentes[]
  @@schema("sisri")
}

model Eventos {
  id                    Int      @id @default(autoincrement())
  notificacionId        Int
  notificacion          Notificacion @relation(fields: [notificacionId], references: [id])
  titulo                String
  descripcion           String
  fecha                 DateTime
  incidentes            Incidentes[]
  gridId                Int
  grid                  USNGSquare @relation(fields: [gridId], references: [id])
  propiedades_afectadas EventosPropiedades[]
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  @@schema("sisri")
}

model Incidentes {
  id              Int      @id @default(autoincrement())
  eventoId        Int
  evento          Eventos  @relation(fields: [eventoId], references: [id])
  tipo            String
  descripcion     String
  propiedades     Propiedades_Existentes[]
  cuencaId        Int
  cuenca          Cuenca   @relation(fields: [cuencaId], references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  @@schema("sisri")
}

model Notificacion {
  id        Int       @id @default(autoincrement())
  eventos   Eventos[]
  createdAt DateTime  @default(now())
  @@schema("sisri")
}

model EventosPropiedades {
  eventoId    Int
  evento      Eventos     @relation(fields: [eventoId], references: [id])
  propiedadId Int
  propiedad   Propiedades_Existentes @relation(fields: [propiedadId], references: [id])
  da√±os       String?
  @@id([eventoId, propiedadId])
  @@schema("sisri")
}

model USNGSquare {
  id          Int      @id @default(autoincrement())
  usng        String   @unique
  geometry    Json
  latitudes   String   // Store as comma-separated values
  longitudes  String   // Store as comma-separated values
  properties  Propiedades_Existentes[]
  cuencas     Cuenca[]
  eventos     Eventos[]
  @@schema("sisri")
}

model Cuenca {
  id             Int        @id @default(autoincrement())
  nombre         String
  codigo_cuenca  String     @unique
  gridId         Int
  geometria      Json
  grid           USNGSquare @relation(fields: [gridId], references: [id])
  incidentes     Incidentes[]
  reports        Report[]
  @@schema("sisri")
}

model Report {
  id                String     @id @default(cuid())
  notificationNumber String
  eventName         String
  date              DateTime
  time              String
  usngCode          String
  incidents         Incident[]
  properties        Property[]
  cuencas           Cuenca[]
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  @@schema("sisri")
}

model Incident {
  id          String   @id @default(cuid())
  type        String
  description String
  reportId    String
  report      Report   @relation(fields: [reportId], references: [id])
  @@schema("sisri")
}

model Property {
  id          String   @id @default(cuid())
  type        String
  municipioId Int
  barrioId    Int?
  sectorId    Int?
  address     String
  value       String?
  location    Json?
  reportId    String
  report      Report   @relation(fields: [reportId], references: [id])
  @@schema("sisri")
}